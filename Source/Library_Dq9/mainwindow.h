#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QtWidgets>
#include <QMap>
#include <QPainter>
#include <QSignalMapper>
#include <QSqlDatabase>
#include <QSqlQuery>
#include <QSqlError>

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    MainWindow(QWidget *parent = nullptr);
    ~MainWindow();

    void TreasureMapDetailData();
    void CreateReverseSeedTable();
    void CalculateDetail();
    void CalculateDetail(bool);
    void CalculateDetail(bool, bool);
    QList<ushort> GetReverseSeedTable(ushort);
    QByteArray GetFloorMap(int);
    void ConvertMap(QByteArray map, int level);
    int GetFloorHeight(int floor);
    int GetFloorWidth(int floor);
    bool IsUpStep(int floor, int x, int y);
    uchar FloorCount();
    uchar BossIndex();
    uchar MonsterRank();
    uchar MapTypeIndex();

    QStringList GetMaps(int Item,int MaterialId, int DungeonId, int DifficultyId, int Level);
    QStringList GetMaps(uint Seed, int Rank);
    QList<QStringList> GetTable(QString Table);
    QStringList GetTable(QString Table, int Language);
    QStringList GetInfo(uint Seed, int Rank, QString Table, int item);
    void AddMap(uint Seed, int Rank, uchar Loc);

    ushort MapSeed;
    uchar MapRank;

    uchar TreasureMapName3_IndexTable[40] = { 0, 8, 0, 0, 0, 1, 1, 11, 16, 1, 2, 2, 12, 17, 21, 3, 3, 13, 18, 22, 4, 4, 4, 4, 4, 5, 9, 14, 19, 5,  6, 6, 6, 6, 6, 7, 10, 15, 20, 23 };
    uchar TableA[20] = { 1, 30, 0, 0, 2, 40, 0, 0, 3, 10, 0, 0, 4, 10, 0, 0, 5, 10, 0, 0 };
    uchar TableB[36] = { 2, 55, 2, 4, 56, 75, 4, 6, 76, 100, 6, 10, 101, 120, 8, 12, 121, 140, 10, 14, 141, 180, 10, 16, 181, 200, 11, 16, 201, 220, 12, 16, 221, 248, 14, 16 };
    uchar TableC[32] = { 2, 55, 1, 3, 56, 75, 2, 4, 76, 100, 3, 5, 101, 140, 4, 6, 141, 180, 5, 7, 181, 200, 6, 9, 201, 220, 8, 9, 221, 248, 9, 9 };
    uchar TableD[36] = { 2, 60, 1, 3, 61, 80, 2, 5, 81, 100, 3, 7, 101, 120, 4, 7, 121, 140, 5, 9, 141, 160, 6, 9, 161, 180, 7, 10, 181, 200, 8, 12, 201, 248, 1, 12 };
    uchar TableE[24] = { 1, 100, 2, 100, 3, 75, 4, 75, 5, 50, 6, 50, 7, 30, 8, 20, 9, 20, 10, 20, 11, 10, 12, 10 };
    uchar TableF[48] = { 1, 1, 2, 0, 2, 1, 2, 0, 3, 1, 3, 0, 4, 1, 4, 0, 5, 2, 5, 0, 6, 2, 6, 0, 7, 3, 7, 0, 8, 3, 8, 0, 9, 4, 9, 0, 10, 5, 9, 0, 11, 1, 10, 0, 12, 4, 10, 0 };
    uchar TableG[32] = { 2, 3, 1, 2, 4, 5, 1, 3, 6, 7, 1, 4, 8, 9, 2, 5, 10, 11, 2, 6, 12, 13, 3, 7, 14, 15, 4, 8, 16, 16, 6, 8 };
    uchar TableH[20] = { 1, 2, 1, 5, 3, 4, 4, 8, 5, 6, 7, 12, 7, 8, 7, 16, 9, 9, 12, 16 };
    uchar TableI[16] = { 1, 3, 1, 6, 4, 6, 4, 9, 7, 9, 7, 12, 10, 12, 10, 16 };
    uchar TableJ[5] = { 0, 1, 2, 4, 3 };
    uchar TableK[1080] = { 8, 0, 11, 0, 14, 0, 34, 0, 38, 0, 39, 0, 40, 0, 130, 0, 140, 0, 8, 0, 38, 0, 39, 0, 40, 0, 54, 0, 59, 0, 99, 0, 135, 0, 189, 0, 8, 0, 38, 0, 39, 0, 40, 0, 52, 0, 131, 0, 139, 0, 153, 0, 1, 1, 8, 0, 38, 0, 39, 0, 40, 0, 118, 0, 124, 0, 128, 0, 174, 0, 217, 0, 8, 0, 38, 0, 39, 0, 40, 0, 82, 0, 125, 0, 182, 0, 197, 0, 221, 0, 8, 0, 38, 0, 39, 0, 40, 0, 47, 0, 137, 0, 151, 0, 169, 0, 5, 1, 8, 0, 38, 0, 39, 0, 40, 0, 77, 0, 137, 0, 180, 0, 183, 0, 213, 0, 8, 0, 38, 0, 39, 0, 40, 0, 55, 0, 198, 0, 245, 0, 2, 1, 9, 1, 8, 0, 38, 0, 39, 0, 40, 0, 53, 0, 175, 0, 237, 0, 9, 1, 78, 1, 8, 0, 38, 0, 39, 0, 40, 0, 181, 0, 237, 0, 241, 0, 71, 1, 78, 1, 8, 0, 38, 0, 39, 0, 40, 0, 53, 0, 215, 0, 226, 0, 237, 0, 71, 1, 8, 0, 38, 0, 39, 0, 40, 0, 215, 0, 226, 0, 235, 0, 241, 0, 73, 1, 8, 0, 38, 0, 39, 0, 40, 0, 83, 0, 119, 0, 132, 0, 150, 0, 186, 0, 8, 0, 38, 0, 39, 0, 40, 0, 42, 0, 159, 0, 164, 0, 200, 0, 220, 0, 8, 0, 38, 0, 39, 0, 39, 0, 40, 0, 64, 0, 76, 0, 163, 0, 177, 0, 8, 0, 38, 0, 39, 0, 40, 0, 52, 0, 98, 0, 134, 0, 143, 0, 172, 0, 8, 0, 38, 0, 39, 0, 40, 0, 98, 0, 148, 0, 178, 0, 203, 0, 221, 0, 8, 0, 38, 0, 39, 0, 40, 0, 151, 0, 166, 0, 188, 0, 213, 0, 5, 1, 8, 0, 27, 0, 38, 0, 39, 0, 40, 0, 184, 0, 222, 0, 5, 1, 65, 1, 8, 0, 38, 0, 39, 0, 40, 0, 53, 0, 77, 0, 168, 0, 184, 0, 65, 1, 8, 0, 38, 0, 39, 0, 40, 0, 53, 0, 184, 0, 194, 0, 239, 0, 65, 1, 8, 0, 38, 0, 39, 0, 40, 0, 77, 0, 194, 0, 239, 0, 254, 0, 74, 1, 8, 0, 38, 0, 39, 0, 40, 0, 185, 0, 230, 0, 239, 0, 254, 0, 74, 1, 8, 0, 38, 0, 39, 0, 40, 0, 228, 0, 229, 0, 230, 0, 242, 0, 74, 1, 8, 0, 8, 0, 38, 0, 38, 0, 39, 0, 40, 0, 103, 0, 106, 0, 109, 0, 8, 0, 18, 0, 38, 0, 39, 0, 40, 0, 95, 0, 101, 0, 114, 0, 202, 0, 8, 0, 38, 0, 39, 0, 40, 0, 104, 0, 109, 0, 165, 0, 232, 0, 233, 0, 8, 0, 38, 0, 39, 0, 40, 0, 86, 0, 121, 0, 162, 0, 165, 0, 217, 0, 8, 0, 38, 0, 39, 0, 40, 0, 49, 0, 190, 0, 204, 0, 217, 0, 3, 1, 8, 0, 38, 0, 39, 0, 40, 0, 178, 0, 183, 0, 193, 0, 204, 0, 3, 1, 8, 0, 38, 0, 39, 0, 40, 0, 47, 0, 183, 0, 193, 0, 206, 0, 222, 0, 8, 0, 38, 0, 39, 0, 40, 0, 93, 0, 196, 0, 224, 0, 243, 0, 67, 1, 8, 0, 38, 0, 39, 0, 40, 0, 184, 0, 224, 0, 247, 0, 250, 0, 67, 1, 7, 0, 38, 0, 39, 0, 40, 0, 185, 0, 246, 0, 247, 0, 250, 0, 0, 0, 7, 0, 38, 0, 39, 0, 40, 0, 236, 0, 246, 0, 250, 0, 69, 1, 0, 0, 7, 0, 38, 0, 39, 0, 40, 0, 236, 0, 244, 0, 248, 0, 69, 1, 0, 0, 8, 0, 38, 0, 39, 0, 40, 0, 62, 0, 116, 0, 123, 0, 127, 0, 200, 0, 8, 0, 38, 0, 39, 0, 40, 0, 134, 0, 135, 0, 141, 0, 187, 0, 208, 0, 8, 0, 21, 0, 38, 0, 39, 0, 40, 0, 44, 0, 120, 0, 140, 0, 220, 0, 8, 0, 27, 0, 38, 0, 39, 0, 40, 0, 64, 0, 120, 0, 167, 0, 177, 0, 8, 0, 38, 0, 39, 0, 40, 0, 128, 0, 136, 0, 146, 0, 167, 0, 201, 0, 8, 0, 38, 0, 39, 0, 40, 0, 46, 0, 107, 0, 178, 0, 192, 0, 223, 0, 8, 0, 38, 0, 39, 0, 40, 0, 170, 0, 192, 0, 195, 0, 198, 0, 223, 0, 8, 0, 38, 0, 39, 0, 40, 0, 195, 0, 213, 0, 214, 0, 218, 0, 252, 0, 8, 0, 38, 0, 39, 0, 40, 0, 181, 0, 214, 0, 249, 0, 252, 0, 9, 1, 8, 0, 38, 0, 39, 0, 40, 0, 199, 0, 249, 0, 252, 0, 9, 1, 68, 1, 8, 0, 38, 0, 39, 0, 40, 0, 171, 0, 199, 0, 249, 0, 68, 1, 77, 1, 8, 0, 38, 0, 39, 0, 40, 0, 171, 0, 199, 0, 231, 0, 238, 0, 77, 1, 8, 0, 38, 0, 39, 0, 40, 0, 61, 0, 94, 0, 157, 0, 207, 0, 4, 1, 8, 0, 38, 0, 39, 0, 40, 0, 81, 0, 149, 0, 158, 0, 179, 0, 212, 0, 8, 0, 38, 0, 39, 0, 40, 0, 89, 0, 110, 0, 162, 0, 205, 0, 4, 1, 8, 0, 19, 0, 38, 0, 39, 0, 40, 0, 90, 0, 160, 0, 255, 0, 6, 1, 8, 0, 38, 0, 39, 0, 40, 0, 87, 0, 96, 0, 112, 0, 180, 0, 7, 1, 8, 0, 38, 0, 39, 0, 40, 0, 87, 0, 168, 0, 169, 0, 180, 0, 2, 1, 8, 0, 38, 0, 39, 0, 40, 0, 55, 0, 168, 0, 175, 0, 218, 0, 2, 1, 8, 0, 38, 0, 39, 0, 40, 0, 181, 0, 218, 0, 243, 0, 245, 0, 75, 1, 8, 0, 38, 0, 39, 0, 40, 0, 240, 0, 243, 0, 245, 0, 248, 0, 75, 1, 8, 0, 38, 0, 39, 0, 40, 0, 240, 0, 248, 0, 251, 0, 12, 1, 75, 1, 8, 0, 38, 0, 39, 0, 40, 0, 176, 0, 248, 0, 251, 0, 253, 0, 12, 1, 8, 0, 38, 0, 39, 0, 40, 0, 176, 0, 253, 0, 8, 1, 12, 1, 72, 1 };
    uchar TableL[438] = { 12, 16, 16, 12, 16, 12, 16, 20, 16, 12, 16, 12, 16, 16, 16, 16, 20, 20, 16, 12, 16, 16, 12, 16, 16, 16, 16, 12, 12, 12, 12, 16, 12, 16, 16, 20, 16, 16, 12, 20, 8, 16, 16, 16, 8, 16, 16, 16, 16, 16, 12, 20, 16, 16, 12, 12, 16, 20, 20, 16, 20, 12, 12, 16, 16, 20, 20, 16, 16, 16, 16, 16, 16, 16, 12, 32, 24, 20, 16, 20, 16, 16, 12, 20, 20, 16, 8, 16, 12, 16, 16, 28, 16, 8, 12, 16, 20, 20, 8, 16, 12, 16, 16, 12, 16, 20, 16, 16, 16, 16, 16, 16, 16, 20, 16, 12, 16, 12, 12, 12, 12, 12, 12, 16, 16, 20, 16, 16, 12, 8, 16, 12, 16, 16, 16, 16, 16, 20, 16, 16, 16, 20, 20, 16, 20, 16, 20, 12, 16, 16, 16, 20, 16, 16, 16, 20, 16, 16, 16, 12, 16, 20, 16, 16, 16, 16, 20, 16, 28, 16, 20, 20, 16, 16, 12, 20, 16, 20, 16, 16, 16, 16, 16, 20, 16, 20, 16, 16, 16, 20, 16, 16, 16, 16, 16, 16, 20, 24, 20, 24, 16, 12, 12, 8, 16, 16, 16, 16, 20, 16, 16, 20, 20, 16, 16, 16, 16, 12, 20, 16, 16, 16, 16, 20, 16, 16, 20, 16, 16, 16, 16, 16, 20, 20, 16, 16, 16, 12, 12, 16, 16, 16, 16, 20, 16, 12, 16, 12, 16, 12, 12, 12, 16, 16, 16, 20, 12, 16, 12, 20, 16, 16, 16, 16, 16, 16, 16, 16, 20, 16, 16, 16, 16, 12, 12, 16, 16, 16, 16, 16, 16, 16, 12, 24, 28, 28, 24, 12, 28, 32, 8, 32, 32, 32, 12, 28, 28, 28, 40, 40, 28, 28, 28, 20, 16, 16, 16, 20, 32, 16, 20, 20, 16, 16, 16, 20, 12, 40, 40, 28, 12, 24, 12, 20, 32, 16, 28, 28, 28, 12, 20, 8, 12, 8, 12, 12, 16, 8, 16, 12, 8, 20, 12, 12, 16, 20, 20, 8, 8, 8, 8, 12, 12, 12, 12, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 8, 8, 8, 8, 8, 8, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 32, 40, 40, 28, 28, 28, 28, 28, 28, 32, 32, 12, 12, 32, 16, 24, 24, 28, 16, 16, 16, 16, 16, 16, 16, 12, 12, 8, 8, 12, 28, 20 };
    uchar TableM[696] = { 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 16, 0, 17, 0, 18, 0, 19, 0, 20, 0, 21, 0, 22, 0, 23, 0, 24, 0, 25, 0, 26, 0, 27, 0, 28, 0, 29, 0, 30, 0, 31, 0, 32, 0, 33, 0, 34, 0, 35, 0, 36, 0, 37, 0, 38, 0, 39, 0, 40, 0, 41, 0, 42, 0, 43, 0, 44, 0, 45, 0, 46, 0, 47, 0, 48, 0, 49, 0, 50, 0, 51, 0, 52, 0, 53, 0, 54, 0, 55, 0, 56, 0, 57, 0, 58, 0, 59, 0, 60, 0, 61, 0, 62, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 65, 0, 66, 0, 67, 0, 68, 0, 69, 0, 70, 0, 71, 0, 72, 0, 73, 0, 74, 0, 75, 0, 76, 0, 77, 0, 78, 0, 79, 0, 80, 0, 81, 0, 82, 0, 83, 0, 84, 0, 85, 0, 86, 0, 87, 0, 88, 0, 89, 0, 90, 0, 91, 0, 92, 0, 93, 0, 94, 0, 95, 0, 96, 0, 97, 0, 98, 0, 99, 0, 100, 0, 101, 0, 102, 0, 103, 0, 104, 0, 105, 0, 106, 0, 107, 0, 108, 0, 109, 0, 110, 0, 111, 0, 112, 0, 113, 0, 114, 0, 115, 0, 116, 0, 117, 0, 118, 0, 119, 0, 120, 0, 121, 0, 122, 0, 123, 0, 124, 0, 125, 0, 126, 0, 127, 0, 128, 0, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 0, 137, 0, 138, 0, 139, 0, 140, 0, 141, 0, 142, 0, 0, 0, 0, 0, 0, 0, 143, 0, 144, 0, 145, 0, 146, 0, 147, 0, 148, 0, 149, 0, 150, 0, 151, 0, 152, 0, 153, 0, 154, 0, 155, 0, 156, 0, 157, 0, 158, 0, 159, 0, 160, 0, 161, 0, 162, 0, 163, 0, 164, 0, 165, 0, 166, 0, 167, 0, 168, 0, 169, 0, 170, 0, 171, 0, 172, 0, 173, 0, 174, 0, 175, 0, 176, 0, 177, 0, 178, 0, 179, 0, 180, 0, 181, 0, 182, 0, 183, 0, 184, 0, 185, 0, 186, 0, 187, 0, 188, 0, 189, 0, 190, 0, 191, 0, 192, 0, 193, 0, 194, 0, 0, 0, 0, 0, 0, 0, 195, 0, 196, 0, 197, 0, 198, 0, 199, 0, 200, 0, 201, 0, 202, 0, 203, 0, 204, 0, 205, 0, 206, 0, 207, 0, 208, 0, 209, 0, 210, 0, 211, 0, 212, 0, 213, 0, 214, 0, 215, 0, 216, 0, 217, 0, 218, 0, 219, 0, 220, 0, 221, 0, 222, 0, 223, 0, 224, 0, 225, 0, 226, 0, 227, 0, 228, 0, 229, 0, 230, 0, 231, 0, 232, 0, 233, 0, 234, 0, 235, 0, 236, 0, 237, 0, 238, 0, 239, 0, 240, 0, 241, 0, 242, 0, 243, 0, 244, 0, 245, 0, 246, 0, 247, 0, 248, 0, 249, 0, 250, 0, 251, 0, 252, 0, 253, 0, 254, 0, 255, 0, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 16, 1, 17, 1, 18, 1, 19, 1, 20, 1, 21, 1, 22, 1, 23, 1, 24, 1, 25, 1, 0, 0, 26, 1, 27, 1, 28, 1, 29, 1, 30, 1, 31, 1, 32, 1, 33, 1, 34, 1, 35, 1, 36, 1, 37, 1, 38, 1, 39, 1, 40, 1, 41, 1, 42, 1, 43, 1, 44, 1, 45, 1, 46, 1, 47, 1, 48, 1, 49, 1, 50, 1, 51, 1, 52, 1, 53, 1, 54, 1, 55, 1, 56, 1, 57, 1, 58, 1, 59, 1, 60, 1, 61, 1, 62, 1, 63, 1, 64, 1, 65, 1, 66, 1, 67, 1, 68, 1, 69, 1, 70, 1, 71, 1, 72, 1, 73, 1 };
    uchar TableN[48] = { 1, 1, 2, 0, 2, 1, 2, 0, 3, 1, 3, 0, 4, 1, 4, 0, 5, 2, 5, 0, 6, 2, 6, 0, 7, 3, 7, 0, 8, 3,  8, 0, 9, 4, 9, 0, 10, 5, 9, 0, 11, 1, 10, 0, 12, 4, 10, 0 };

    uchar TableO[11] = { 0, 14, 28, 41, 55, 71, 88, 108, 125, 141, 162 };
    uchar TableP[162] = { 10, 10, 5, 10, 10, 8, 5, 8, 10, 10, 2, 8, 2, 2, 8, 8, 10, 2, 10, 10, 10, 10, 8, 8, 10, 2, 2, 2, 10, 10, 10, 10, 10, 10, 10, 1, 10, 10, 5, 2, 2, 5, 15, 15, 12, 10, 15, 12, 2, 5, 5, 1, 1, 1, 1, 5, 15, 10, 15, 1, 1, 1, 1, 1, 1, 10, 10, 1, 12, 1, 15, 10, 15, 15, 15, 10, 6, 1, 1, 10, 1, 10, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 15, 6, 2, 2, 15, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 13, 13, 10, 15, 15, 15, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 15, 10, 10, 8, 1, 1, 1, 1, 1, 1, 1, 15, 10, 10, 10, 15, 10, 8, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    // TableQ reinterpreter
    uchar TableQ[162] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 22, 23, 24, 25, 26, 27, 28, 29, 18, 4, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 29, 35, 2, 41, 42, 43, 44, 45, 46, 47, 48, 38, 49, 50, 2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 29, 60, 61, 38, 62, 50, 35, 63, 64, 65, 66, 67, 68, 29, 69, 70, 71, 72, 73, 74, 38, 47, 64, 75, 76, 77, 78, 79, 80, 29, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 67, 76, 93, 29, 94, 95, 96, 97, 98, 99, 100, 0, 102, 103, 104, 91, 63, 105, 106, 76, 29, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 91, 116, 94, 1, 76, 117, 118, 95, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130};
    QStringList TableR;
    QStringList Monster;
    uchar TableMonster[5][12][7] = {{{52, 58, 62, 81, 101, 40},{66, 79, 103, 104, 117, 76},{106, 109, 113, 116, 139, 117},{112, 151, 156, 158, 164, 125},{140, 155, 157, 171, 178, 151},{168, 176, 179, 182, 184, 167},{184, 189, 196, 205, 206, 190},{187, 188, 197, 208, 247, 199},{199, 207, 208, 209, 210, 197, 247},{209, 210, 211, 212, 213, 218},{207, 209, 212, 214, 215, 210, 211},{211, 214, 215, 216, 217}},{{42, 44, 56, 77, 96, 123},{70, 71, 85, 102, 123, 160},{86, 88, 142, 159, 78},{119, 132, 133, 139, 149},{132, 148, 163, 173, 178, 179},{160, 179, 182, 196, 202, 173},{152, 182, 195, 218, 219, 202},{200, 206, 207, 218, 219, 195},{207, 218, 219, 220, 221},{206, 220, 221, 222, 223, 237},{220, 222, 223, 224, 225, 221},{223, 224, 226, 227, 228, 207, 222}},{{37, 65, 73, 97, 84},{68, 80, 121, 130, 135, 65},{97, 110, 124, 127, 129, 126},{128, 129, 143, 156, 175, 154},{131, 138, 154, 156, 183, 177},{131, 173, 183, 185, 189, 177},{176, 181, 185, 189, 195, 192},{192, 193, 198, 201, 229, 176},{201, 219, 229, 230, 231, 198},{225, 230, 231, 232, 229},{230, 232, 234, 235, 231},{234, 235, 236, 248, 228}},{{57, 59, 87, 90, 99, 50},{61, 89, 91, 108, 147, 106},{87, 100, 128, 134, 145, 106},{136, 137, 144, 161, 194, 169},{169, 170, 172, 186, 205, 168},{168, 172, 187, 200, 205, 181},{187, 188, 191, 199, 200, 181},{191, 193, 213, 246, 247, 188},{193, 246, 247, 248, 249},{246, 248, 249, 250, 251, 247},{248, 250, 251, 252, 253, 249},{251, 252, 253, 254, 255, 225}},{{70, 74, 92, 98, 115, 55},{75, 94, 95, 103, 119, 150},{58, 111, 122, 123, 150},{86, 122, 152, 153, 159, 123, 165},{107, 153, 164, 165, 166, 162},{141, 146, 162, 167, 173, 190},{146, 167, 180, 190, 197, 196},{180, 191, 196, 237, 238, 199},{208, 213, 237, 238, 239, 199},{208, 237, 241, 238, 239, 240},{239, 243, 241, 208, 240, 242},{245, 241, 243, 244, 240, 242}}};

    struct TreasureBoxInfo
    {
        int index;
        int rank;
        int x;
        int y;
    };

private:
    struct TileMap
    {
        TileMap(QVector<QVector<uchar>> map, int x, int y)
        {
            M = map[x][y];
            T = BlockIfAnyBlock(map[x][y], map[x - 1][y]);
            B = BlockIfAnyBlock(map[x][y], map[x + 1][y]);
            L = BlockIfAnyBlock(map[x][y], map[x][ y - 1]);
            R = BlockIfAnyBlock(map[x][y], map[x][ y + 1]);
            TL = BlockIfAnyBlock(T, L);
            TR = BlockIfAnyBlock(T, R);
            BL = BlockIfAnyBlock(B, L);
            BR = BlockIfAnyBlock(B, R);
        }

        uchar BlockIfAnyBlock(uchar tile1, uchar tile2) {return tile1 == 0 || tile2 == 0 ? 0 : 3;}

        uchar TL;
        uchar T;
        uchar TR;
        uchar L;
        uchar M;
        uchar R;
        uchar BL;
        uchar B;
        uchar BR;
    };

    QString FrenchName(ushort, uchar);

    void Init();
    void CreateMap();
    uchar GetBlockType(uchar, int, int, int);
    void Map();
    QImage PaintImage(TileMap*);
    QImage PaintTile(int);
    void Chest(int);

    QByteArray Color;
    QVector<QImage> Floor;
    QVector<QVector<QVector<uchar>>> ByteFloor;

    void CreateDungeonDetail(bool);
    void SetValue(int, uint, uchar, uchar, uchar, uchar);
    void routine1(int, uint, uint, uint);
    bool routineA(int, uint, uint, uint);
    void routineB(int, uint);
    bool routineC(int, uint, uint);
    bool routineD(int, uint);
    bool routineE(int, uint, uint, uint);
    void routineF(int, uint);
    int routineG(int, uint);
    bool routineH(int, uint, uint, uint, uint, uint, uint);
    uint routineI(int, uint, uint, uint);
    void routineJ(int);
    int routineK(int);
    void GenerateFloorMap(int, uint);
    uint GetItemRank(uint, uint);
    int GetTreasureBoxIndex(int, int, int);
    int GetTreasureBoxCountPerFloor(int);
    uint routineRandom(uint);
    QString GetTreasureBoxItem(int, int, int);
    int GetTreasureBoxRankPerFloor(int, int);

    uint GenerateRandom();
    uint GenerateRandom(uint);
    uint GenerateRandom(uint, uint);
    uint Seek1(uchar*, int);
    uint Seek2(uchar*, uchar ,int);
    uint Seek3(uchar, uchar);
    uint Seek4(uchar*,uchar*, int);

    uint _seed;
    uchar _mapRank;
    ushort _mapSeed;
    bool _validSeed;
    uchar _name3Index;

    uchar _details[20];
    uchar _details2[20];
    uchar _dungeonInfo[16][1336];

    QMap<ushort, QList<ushort>> _reverseSeedTable;

    QList<uchar> _validRankList;
    QList<uchar> _validPlaceList;
    QList<uchar> _lowRankValidPlaceList;
    QList<uchar> _middleRankValidPlaceList;
    QList<uchar> _highRankValidPlaceList;
    QList<TreasureBoxInfo> _treasureBoxInfoList[16];
    QList<uchar> _candidateRank;

    QPixmap Image;
    QString Name;
    int BaseRankTable[12] = { 2, 56, 61, 76, 81, 101, 121, 141, 161, 181, 201, 221 };

    QWidget* MapsUi;
    QStringList Seed;
    QStringList Rank;
    QStringList Difficulty;
    QStringList Dungeon;
    QStringList Material;
    QStringList Location;
    int pos;
    uchar MapRankValue;
    QListWidgetItem* MapSel;

    QWidget* OpenUi;

    //HoimiTable
    QWidget* HoimiUi;
    void InitHoimi();
    void Table();
    void Table_Color();
    void Reset_Window();
    double Hoimi_min(int x);
    double Hoimi_max(int x);
    void Hoimi_rand();
    void Deplacement(int x);
    void Filltable(int);

    int baseheal, span, Last_posH, posH, posG, seed;
    unsigned int seed0, seed1, seed2, seed3;

    //Monster
    QWidget* MonsterUi;
    void InitMonster();
    QStringList BossDrop;
    QStringList BossWeak;
    QStringList BossHp;
    QStringList BossType;

    //InfoMap
    QWidget* InfoMapUi;
    void InitInfoMap();
    uchar Loc;
    QStringList LocToPos = {"1", "1", "1", "1", "2", "2", "2", "2", "3", "3", "3", "4", "4", "4", "4", "4", "5", "5", "5", "6", "6", "6", "6", "6", "7", "7", "7", "7", "8", "8", "8", "8", "8", "9", "9", "9", "10", "10", "10", "11", "11", "11", "12", "12", "12", "12", "12", "13", "13", "13", "14", "15", "15", "15", "15", "15", "15", "15", "16", "16", "16", "16", "17", "17", "17", "17", "17", "18", "18", "18", "18", "18", "19", "19", "19", "20", "20", "20", "20", "20", "20", "20", "21", "21", "21", "21", "21", "22", "22", "22", "22", "23", "23", "23", "22", "22", "22", "24", "24", "24", "25", "25", "25", "7", "26", "26", "26", "26", "27", "27", "27", "27", "27", "28", "28", "29", "29", "29", "29", "30", "30", "30", "29", "29", "31", "31", "31", "31", "32", "32", "32", "33", "33", "1", "3", "3", "7", "7", "8", "8", "13", "13", "13", "15", "16", "19", "25", "26", "27", "29"};

private slots:
    void MapSelect();
    void OpenMap();
    void MapSelected(QListWidgetItem*);
    void Validate();
    void Validate(QListWidgetItem*);
    void CancelOpen();
    void SaveMap();
    void Map(int);
    void FloorLevel();
    void Search();
    void Maps(QStringList);
    void OK();
    void Selected(int);
    void Cancel();

    // Hoimi Table
    void InitHoimiUi();
    void Reset();
    void Calculate();
    void SearchSeed();
    void Base();
    void Function();
    void Filltable();
    void Plus1();
    void Plus4();
    void Plus8();
    void Quit();
    void Return_Page();
    void Help();
    void Help2();

    // Monster
    void InitMonsterUi();
    void MonsterClose();

    //InfoMap
    void InitInfoMapUi();
    void InfoMapClose();
};
#endif // MAINWINDOW_H
